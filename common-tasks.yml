steps:
# Build using whatever the parent task provides us
- task: PythonScript@0
  inputs:
    scriptSource: 'filePath'
    scriptPath: build_python.py
    arguments: 3.6.8 #later versions don't have installers for some reason
  displayName: 'install python 3.6.8'

- task: PythonScript@0
  inputs:
    scriptSource: 'filePath'
    scriptPath: build_python.py
    arguments: 3.7.10
  displayName: 'install python 3.7.10'

- task: PythonScript@0
  inputs:
    scriptSource: 'filePath'
    scriptPath: build_python.py
    arguments: 3.9.4 # added in pyenv v1.2.26
  displayName: 'install python 3.9.1'

# Building 3.8 last on purpose because the installer on windows clobbers the system's hosted python
# Just keep it last or wonder why the system is loading python2 afterwards...
- task: PythonScript@0
  inputs:
    scriptSource: 'filePath'
    scriptPath: build_python.py
    arguments: 3.8.9 # added in pyenv v1.2.25
  displayName: 'install python 3.8.9'

# Upload artifactory build info
- task: ArtifactoryCollectIssues@1
  inputs:
    artifactoryService: 'devops-ccdc-3rd-party'
    configSource: 'taskConfiguration'
    taskConfig: |
      version: 1
      issues:
        trackerName: JIRA
        regexp: '(.*?)\b\(?(Jira|JIRA|jira)?\s+([A-Za-z]{2,5}\d*-\d+)\)?'
        keyGroupIndex: 3
        summaryGroupIndex: 1
        trackerUrl: https://jira.ccdc.cam.ac.uk/issues
        aggregate: true
        aggregationStatus: RELEASED
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)-$(artifactory.platformName)'
  displayName: 'Collect issues'

- task: ArtifactoryGenericUpload@2
  inputs:
    artifactoryService: 'devops-ccdc-3rd-party'
    specSource: 'taskConfiguration'
    fileSpec: |
      {
        "files": [
          {
            "pattern": "$(Build.ArtifactStagingDirectory)/base_python*",
            "target": "ccdc-3rdparty-python-interpreters"
          }
        ]
      }
    replaceSpecVars: true
    collectBuildInfo: true
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)-$(artifactory.platformName)'
    module: 'python/$(artifactory.platformName)'
    includeEnvVars: true
    failNoOp: true
  env:
    JFROG_CLI_TEMP_DIR: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Upload distribution to artifactory'

- task: ArtifactoryPublishBuildInfo@1
  inputs:
    artifactoryService: 'devops-ccdc-3rd-party'
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)-$(artifactory.platformName)'
    excludeEnvVars: '*password*;*secret*;*key*;*token*'
  env:
    JFROG_CLI_TEMP_DIR: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Publish build'
